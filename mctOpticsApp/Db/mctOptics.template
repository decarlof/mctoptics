# Database for EPICS PVS for txm optics control
# This database contains all of the PVs used by the txmoptics base class.

###############################
# TomoScan, Camera  PV Prefixes 
###############################

record(stringout, "$(P)$(R)CameraPVPrefix")
{
   field(VAL,  "$(CAMERA)")
}

record(stringout, "$(P)$(R)OverlayPluginPVPrefix")
{
   field(VAL,  "$(OVERLAY)")
}

############################
# Lens Sample X-Y-Z PV Names
############################
record(stringout, "$(P)$(R)LensSampleXPVName")
{
   field(VAL,  "$(LENS_SAMPLE_X)")
}

record(stringout, "$(P)$(R)LensSampleYPVName")
{
   field(VAL,  "$(LENS_SAMPLE_Y)")
}

record(stringout, "$(P)$(R)LensSampleZPVName")
{
   field(VAL,  "$(LENS_SAMPLE_Z)")
}

##########################
# Camera rotation PV Names
##########################
record(stringout, "$(P)$(R)Camera0RotationPVName")
{
   field(VAL,  "$(CAM0_ROT)")
}

record(stringout, "$(P)$(R)Camera1RotationPVName")
{
   field(VAL,  "$(CAM1_ROT)")
}

###############################
# Optique Peter camera selector
###############################

record(mbbo, "$(P)$(R)CameraSelect") {
  field(DTYP, "Raw Soft Channel")
  field(NOBT, "3")
  field(ZRVL, "0x0")
  field(ONVL, "0x1")
  field(ZRST, "Pos. 0")
  field(ONST, "Pos. 1")
}

record(ao, "$(P)$(R)CameraPos0") {
  field(PREC, "4")
  field(VAL,  "$(CAMERA_POS0)")
}

record(ao, "$(P)$(R)CameraPos1") {
  field(PREC, "4")
  field(VAL,  "$(CAMERA_POS1)")
}

record(stringout, "$(P)$(R)CameraName0") {
  field(PINI, "YES")
  field(VAL, "Pos. 0")
  field(OUT, "$(P)$(R)CameraSelect.ZRST PP MS")
}

record(stringout, "$(P)$(R)CameraName1") {
  field(PINI, "YES")
  field(VAL, "Pos. 1")
  field(OUT, "$(P)$(R)CameraSelect.ONST PP MS")
}

record(stringout, "$(P)$(R)CameraMotorPVName")
{
   field(VAL,  "$(CAMERA_MOTOR)")
}

###############################
# Optique Peter camera rotation
###############################

record(ao, "$(P)$(R)Camera0Lens0Rotation")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Camera0Lens1Rotation")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Camera0Lens2Rotation")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Camera1Lens0Rotation")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Camera1Lens1Rotation")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Camera1Lens2Rotation")
{
   field(PREC,  "4")
   field(VAL,  0)
}

#############################
# Optique Peter lens selector
#############################

record(mbbo, "$(P)$(R)LensSelect") {
  field(DTYP, "Raw Soft Channel")
  field(NOBT, "3")
  field(ZRVL, "0x0")
  field(ONVL, "0x1")
  field(ONVL, "0x2")
  field(ZRST, "Pos. 0")
  field(ONST, "Pos. 1")
  field(ONST, "Pos. 2")
}

record(ao, "$(P)$(R)LensPos0") {
  field(PREC, "4")
  field(VAL,  "$(LENS_POS0)")
}

record(ao, "$(P)$(R)LensPos1") {
  field(PREC, "4")
  field(VAL,  "$(LENS_POS2)")
}

record(ao, "$(P)$(R)LensPos2") {
  field(PREC, "4")
  field(VAL,  "$(LENS_POS2)")
}

record(stringout, "$(P)$(R)LensName0") {
  field(PINI, "YES")
  field(VAL, "Pos. 0")
  field(OUT, "$(P)$(R)LensSelect.ZRST PP MS")
}

record(stringout, "$(P)$(R)LensName1") {
  field(PINI, "YES")
  field(VAL, "Pos. 1")
  field(OUT, "$(P)$(R)LensSelect.ONST PP MS")
}

record(stringout, "$(P)$(R)LensName2") {
  field(PINI, "YES")
  field(VAL, "Pos. 2")
  field(OUT, "$(P)$(R)LensSelect.TWST PP MS")
}

record(stringout, "$(P)$(R)LensMotorPVName")
{
   field(VAL,  "$(LENS_MOTOR)")
}

######################
# Detector image cross
######################

record(mbbo, "$(P)$(R)CrossSelect") {
  field(DTYP, "Raw Soft Channel")
  field(NOBT, "3")
  field(ZRVL, "0x0")
  field(ONVL, "0x1")
  field(ZRST, "Yes")
  field(ONST, "No")
}

##############################
# Optique Peter lens 1 offsets
##############################

record(ao, "$(P)$(R)Lens1XOffset")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Lens1YOffset")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Lens1ZOffset")
{
   field(PREC,  "4")
   field(VAL,  0)
}

##############################
# Optique Peter lens 2 offsets
##############################

record(ao, "$(P)$(R)Lens2XOffset")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Lens2YOffset")
{
   field(PREC,  "4")
   field(VAL,  0)
}

record(ao, "$(P)$(R)Lens2ZOffset")
{
   field(PREC,  "4")
   field(VAL,  0)
}

###############################
# MCT status via Channel Access
###############################

record(waveform,"$(P)$(R)MCTStatus") 
{
   field(FTVL, "UCHAR")
   field(NELM, "256")
}

record(calcout, "$(P)$(R)Watchdog")
{
   field(SCAN, "1 second")
   field(INPA, "$(P)$(R)Watchdog.VAL NPP")
   field(CALC, "A-1")
   field(OCAL, "A>0?1:0")
   field(OOPT, "On Change")
   field(DOPT, "Use OCAL")
   field(OUT,  "$(P)$(R)ServerRunning PP")
}

record(bi, "$(P)$(R)ServerRunning")
{
   field(ZNAM, "Stopped")
   field(ZSV,  "MAJOR")
   field(ONAM, "Running")
   field(OSV,  "NO_ALARM")
}

###############
# Sync to motor
###############

record(busy, "$(P)$(R)Sync")
{
   field(ZNAM, "Done")
   field(ONAM, "Sync")
}

####################
# Optics information
####################

record(stringout, "$(P)$(R)ScintillatorType")
{
   field(VAL,  "Unknown")
}

record(ao, "$(P)$(R)ScintillatorThickness")
{
   field(PREC,  "0")
}

record(ao, "$(P)$(R)ImagePixelSize")
{
   field(PREC, "2")
   field(EGU,  "microns")
}

record(ao, "$(P)$(R)DetectorPixelSize")
{
   field(PREC, "2")
   field(EGU,  "microns")
}

record(stringout, "$(P)$(R)CameraObjective")
{
   field(VAL,  "Unknown")
}

record(ao, "$(P)$(R)CameraTubeLength")
{
   field(PREC, "0")
   field(EGU,  "mm")
}

############
# Lens names
############

record(stringout, "$(P)$(R)Lens0Name")
{
   field(VAL,  "Unknown")
}

record(stringout, "$(P)$(R)Lens1Name")
{
   field(VAL,  "Unknown")
}

record(stringout, "$(P)$(R)Lens2Name")
{
   field(VAL,  "Unknown")
}

##############
# Camera names
##############

record(stringout, "$(P)$(R)Camera0Name")
{
   field(VAL,  "Unknown")
}

record(stringout, "$(P)$(R)Camera1Name")
{
   field(VAL,  "Unknown")
}

####################
# Energy information
####################

record(ao, "$(P)$(R)Energy") 
{
    field(SCAN, "Passive")
    field(DTYP, "Soft Channel")
    field(PREC, 2)
}

record(mbbo, "$(P)$(R)EnergyMode")
{
   field(ZRVL, "0")
   field(ZRST, "Mono")
   field(ONVL, "1")
   field(ONST, "Pink")
   field(TWVL, "2")
   field(TWST, "White")
}

record(stringout, "$(P)$(R)Filters")
{
   field(VAL,  "Unknown")
}

###############
# Energy change
###############

record(busy,"$(P)$(R)EnergySet")
{
   field(ZNAM,"Done")
   field(ZSV, "NO_ALARM")
   field(ONAM,"Set")
   field(OSV, "MINOR")
   field(VAL, "0")
}

record(busy, "$(P)$(R)EnergyBusy")
{
   field(ZNAM, "Done")
   field(ONAM, "Busy")
}

record(mbbo, "$(P)$(R)EnergyUseCalibration") {
  field(DTYP, "Raw Soft Channel")
  field(NOBT, "3")
  field(ZRVL, "0x0")
  field(ONVL, "0x1")
  field(ZRST, "Yes")
  field(ONST, "No")
}

record(stringout, "$(P)$(R)EnergyCalibrationFileOne")
{
   field(VAL,  "$(EN_FILE1)")
}

record(stringout, "$(P)$(R)EnergyCalibrationFileTwo")
{
   field(VAL,  "$(EN_FILE2)")
}

###################
# Detector cropping
###################
record(longout, "$(P)$(R)CutLeft")
{
}

record(longout, "$(P)$(R)CutRight")
{
}

record(longout, "$(P)$(R)CutTop")
{
}

record(longout, "$(P)$(R)CutBottom")
{
}

record(busy, "$(P)$(R)Cut")
{
   field(ZNAM, "Done")
   field(ONAM, "Cut")
}